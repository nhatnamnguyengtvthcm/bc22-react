{"ast":null,"code":"var _jsxFileName = \"/Users/namnn/Documents/cybersoft/bc22-react/src/BT_MovieTicket/SeatItem.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport cn from \"classnames\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SeatItem = _ref => {\n  _s();\n\n  let {\n    seat,\n    isDisabled,\n    onSelect\n  } = _ref;\n  // state để quản lý trạng thái ghế có đang được chọn hay không\n  const [isSelected, setIsSelected] = useState(false);\n\n  const handleSelect = () => {\n    // Kiểm tra nếu trạng thái ghế là không chọn (isSelected là false) và không được phép chọn thêm (isDisabled là true) thì không cho phép thay đổi trạng thái ghế bằng cách return kết thúc hàm\n    if (!isSelected && isDisabled) {\n      return;\n    } // setIsSelected: thay đổi trạng thái của ghế\n\n\n    setIsSelected(!isSelected); // Truyền giá trị và trạng thái của ghế vừa chọn lên component SeatList\n\n    onSelect(seat, !isSelected);\n  };\n\n  const classes = cn(\"btn btn-secondary\", {\n    // key: value <=> classname: conditional\n    \"btn-danger\": seat.daDat,\n    \"btn-success\": isSelected\n  });\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    style: {\n      width: \"50px\",\n      marginBottom: \"10px\"\n    },\n    className: classes,\n    disabled: seat.daDat,\n    onClick: handleSelect,\n    children: seat.soGhe\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SeatItem, \"5DtxMhs0n+JsbGWNZftSFTxrVZQ=\");\n\n_c = SeatItem;\nexport default SeatItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"SeatItem\");","map":{"version":3,"names":["React","useState","cn","SeatItem","seat","isDisabled","onSelect","isSelected","setIsSelected","handleSelect","classes","daDat","width","marginBottom","soGhe"],"sources":["/Users/namnn/Documents/cybersoft/bc22-react/src/BT_MovieTicket/SeatItem.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport cn from \"classnames\";\n\nconst SeatItem = ({ seat, isDisabled, onSelect }) => {\n  // state để quản lý trạng thái ghế có đang được chọn hay không\n  const [isSelected, setIsSelected] = useState(false);\n\n  const handleSelect = () => {\n    // Kiểm tra nếu trạng thái ghế là không chọn (isSelected là false) và không được phép chọn thêm (isDisabled là true) thì không cho phép thay đổi trạng thái ghế bằng cách return kết thúc hàm\n    if (!isSelected && isDisabled) {\n      return;\n    }\n\n    // setIsSelected: thay đổi trạng thái của ghế\n    setIsSelected(!isSelected);\n    // Truyền giá trị và trạng thái của ghế vừa chọn lên component SeatList\n    onSelect(seat, !isSelected);\n  };\n\n  const classes = cn(\"btn btn-secondary\", {\n    // key: value <=> classname: conditional\n    \"btn-danger\": seat.daDat,\n    \"btn-success\": isSelected,\n  });\n\n  return (\n    <button\n      style={{ width: \"50px\", marginBottom: \"10px\" }}\n      className={classes}\n      disabled={seat.daDat}\n      onClick={handleSelect}\n    >\n      {seat.soGhe}\n    </button>\n  );\n};\n\nexport default SeatItem;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,EAAP,MAAe,YAAf;;;AAEA,MAAMC,QAAQ,GAAG,QAAoC;EAAA;;EAAA,IAAnC;IAAEC,IAAF;IAAQC,UAAR;IAAoBC;EAApB,CAAmC;EACnD;EACA,MAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BP,QAAQ,CAAC,KAAD,CAA5C;;EAEA,MAAMQ,YAAY,GAAG,MAAM;IACzB;IACA,IAAI,CAACF,UAAD,IAAeF,UAAnB,EAA+B;MAC7B;IACD,CAJwB,CAMzB;;;IACAG,aAAa,CAAC,CAACD,UAAF,CAAb,CAPyB,CAQzB;;IACAD,QAAQ,CAACF,IAAD,EAAO,CAACG,UAAR,CAAR;EACD,CAVD;;EAYA,MAAMG,OAAO,GAAGR,EAAE,CAAC,mBAAD,EAAsB;IACtC;IACA,cAAcE,IAAI,CAACO,KAFmB;IAGtC,eAAeJ;EAHuB,CAAtB,CAAlB;EAMA,oBACE;IACE,KAAK,EAAE;MAAEK,KAAK,EAAE,MAAT;MAAiBC,YAAY,EAAE;IAA/B,CADT;IAEE,SAAS,EAAEH,OAFb;IAGE,QAAQ,EAAEN,IAAI,CAACO,KAHjB;IAIE,OAAO,EAAEF,YAJX;IAAA,UAMGL,IAAI,CAACU;EANR;IAAA;IAAA;IAAA;EAAA,QADF;AAUD,CAhCD;;GAAMX,Q;;KAAAA,Q;AAkCN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}